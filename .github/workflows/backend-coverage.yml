name: Backend Coverage
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  coverage:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    strategy:
      matrix:
        go-versions: [1.19.x]
    name: Generate test coverage badge
    steps:

    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install dependencies
      run: go get .

    - name: Build
      run: go build -v ./...

    - name: Generate a coverage value
      id: coverage
      # Generates a GitHub Workflow output named `lines`
      run: |
        COVERAGE="$( go test -cover | grep % | cut -c 11-16 | sed 's/^[ \t]*\([0-9]\+\)[^0-9].*$/\1/' )"
        echo "##[set-output name=lines;]${COVERAGE}%"

    - name: Generate the badge SVG image
      uses: emibcn/badge-action@v2.0.3
      id: badge
      with:
        label: 'Backend test coverage'
        status: ${{ steps.coverage.outputs.lines }}
        color: 'blue'
        path: ${{ steps.coverage.outputs.path }}

    - name: Upload badge as artifact
      uses: actions/upload-artifact@v4
      with:
        name: badge
        path: ${{ steps.coverage.outputs.path }}
        if-no-files-found: error

    - name: Commit badge
      continue-on-error: true
      env:
        BADGE: ${{ steps.coverage.outputs.path }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add "${BADGE}"
        git commit -m "Add/Update badge"

    - name: Push badge commit
      uses: ad-m/github-push-action@master
      if: ${{ success() }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.coverage.outputs.branch }}
